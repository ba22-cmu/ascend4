interface Annotation{
	Annotation();
	Annotation(Note note);
	// Annotation(struct Note *note);
	[Const] DOMString getId() ;
	[Const] DOMString getMethod() ;
	[Const] SymChar getType() ;
	[Const] SymChar getLanguage() ;
	[Const] DOMString getFilename() ;
	[Const] int getLineNumber() ;
	[Const] DOMString getText() ;
	[Const] int getDataType() ;
	//const void *getUserData(const int &datatype) ;
};

interface AnnotationDatabase{
	AnnotationDatabase([Const, Ref] SymChar dbid);
	// AnnotationDatabase(const SymChar &dbid);
	std::vector<Annotation> getNotes([Const, Ref] Type &type,
					[Const] SymChar lang /* =NULL */,
					[Const] SymChar id /*=NULL*/,
					[Const] SymChar method /*=NULL*/,
					[Const] int flag=0
	);

	std::vector<Annotation> getTypeRefinedNotesLang([Const] Type type,
							[Const] SymChar lang
	);

	[Const] DOMString getNoteForVariable([Const, Ref] Type type,
					[Const] SymChar varname,
					[Const] SymChar lang /*=NULL, assume 'inline' if not specified */
	);
};


